<?php
declare(strict_types=1);

namespace App\Shared\Generated\DTO\Category;

use Micro\Library\DTO\Object\AbstractDto;

/**
 * Autogenerated data transfer object.
 *
 */
class CategoryCreateTransfer extends AbstractDto
{
    /**
    * @var string    */
    protected string $name;

    /**
    * @var string    */
    protected string $parentUuid;


    /**
     * @return string
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * @param string $name
     *
     * @return self
     */
    public function setName(string $name): self
    {
        $this->name = $name;

        return $this;
    }

    /**
     * @return string
     */
    public function getParentUuid(): string
    {
        return $this->parentUuid;
    }

    /**
     * @param string $parentUuid
     *
     * @return self
     */
    public function setParentUuid(string $parentUuid): self
    {
        $this->parentUuid = $parentUuid;

        return $this;
    }

    /**
     * @returns array
     */
    public function toArray(): array
    {
        return [
            'name'       => ($this->name instanceof AbstractDto ? $this->name->toArray() : $this->name),
            'parentUuid'       => ($this->parentUuid instanceof AbstractDto ? $this->parentUuid->toArray() : $this->parentUuid),
        ];
    }

    /**
    * {@inheritdoc}
    */
    protected function attributesMetadata(): array
    {
        return [
            'name' => [
                'is_collection'     =>   false ,
                'type'              => 'string',
                'actionName'        => 'Name',
                'required'          => true,
                'dto'               =>  false ,
            ],

            'parentUuid' => [
                'is_collection'     =>   false ,
                'type'              => 'string',
                'actionName'        => 'ParentUuid',
                'required'          => true,
                'dto'               =>  false ,
            ],

        ];
    }
}

